Version 2
Destination 0xa



######### UAT Message to TestServer
#RF deck control

#(unused)Replace with CL->TS command, responses with unique format described elsewhere
Message CommandResponse 0001
    Result  UInt        #0=success, >0 command specific error
end

Message RFInit 0x0002     #No arguments
end

#Set RF path
Message RFPath 0x0003    #Set RF signal path (/routing)
    Path    UInt         #Enum, see below
    Index   Int          #Index (0-3) of tx routing register (Testserver will default to 0 if not specified)
end
#TXA_BJ5_RXJ4 = 0,       RXB_AJ2_TXJ1 =       5
#TXA_RXB =      1,       RXTXA_BJ5 =          6
#TXB_AJ2_RXJ4 = 2,       RXTXB_AJ2 =          7
#RXA_BJ5_TXJ1 = 3,       RXTXDIRECT_AJ2_BJ5 = 8
#RXA_TXB =      4,       RXTXCAL_AJ2_BJ5 =    9
#BOARDTEST =   10 


#Set TX frequency (only support first RF board)
Message TXFreq 0x0004
    Freq    Float
    Mod     UInt         #Channel Spacing used if both specified
    A       UInt         #For testing
    B       UInt         #For testing
    DisableRetry Bool
    Sync    Bool   
end

#Set RX frequency (only support first RF board)
Message RXFreq 0x0005
    Freq    Float
    Mod     UInt         #Channel Spacing used if both specified
    DisableRetry Bool
    Sync    Bool      
end

#Set coarse and step attnuators (fin set to 0 DB
#TODO: Change to Coarse, Step, and Fine (see message TXAttenuation  0x001E)
#Deprecated, do not use
Message TXAtten  0x0006
   Fine         UInt    #Attenenuation (.1dB units) 0-63.5 (0-635) 
   Coarse       UInt    #Enum, 0=0dB,1=20dB,2=40dB, 3=40dB
end


#Set RX atenuator. Note 3=OFF 
Message RXAtten  0x0007
   Coarse       UInt    #Enum, 0=0dB,1=20dB,2=40dB,3=off
end

#Set NCO Offset
Message NCOOffset   0x0008
    Channel     UInt    #Channel # 0 or 1
    Offset      Int     #Offset in Hz. +/- 40,000,000
end

#Offset gains for IQ balance (and TX fine attenuation)
#These values control both the balance, and the fine attenuation.
Message DACGainBalance 0x0009 
    Channel     UInt
    IGain       Float  #dB (positive attenuation)
    QGain       Float  #dB (positive attenuation)
end

#Enable RF board from FPGA and P/S's on Highlands
Message RFEnable 0x000a
    Enable     Bool     #Turns on RF power to RF board,
    Flags      UInt     #if Enable==true, sets the P/S enable flags in the 
                        #MAX10, register 8, bit defintions:
                        # 0=main, 1=synthesizer, 2=TX, 3=VSWR, 4=CAL, 5=DIRDET
                        # 6=undefined, 7=tx band, 7=tx PA, 8=RX band, 8=RX LNA,
                        # 9=RX filter

end

#Set mod source (FPGA register 0x4)
Message ModSource 0x000b  #11 Turnon unmodulated output
    Source     UInt     #0-7
end

#Start RXLevel measurement
Message StartRXLevelMeasurement 0x000c   #12
#       //No params
end

#Response ReplyRXLevelMeasurement
Message ReadRXLevelMeasurement 0x000d   #13   Returns average RF level
end


#Set RXBandwidth
Message RXBandwidth 0x000e          #14
    Bandwidth   UInt    #0-312MHZ=0x0, 2MHZ=0x01, 200KHZ=0x2, 20KHZ=0x3
end

#Set Scopemode
Message ScopeMode 0x000f #15    Set scope to capture data
    Mode  UInt               #0=Off,
                             #1=RX_LEVEL
                             #2=I&Q  Channel 0 =I, Channel 1 = Q
    DecimationCount UInt     #Number of samples per decimation block
    BufferSize UInt          #Size of scope buffer, 0=Use mode default 
end

#Initiate Scope capture
Message ScopeCapture 0x0010 #16   Initiate capture for current mode
end

#Read scope buffer, use values from ScopeMode message if not supplied
Message ReadScopeBuffer 0x0011 #17
    Channel UInt    #0-3
    Size    UInt    #0-4096, 0=use default size for current scope mode
    Signed  Bool    #Read Signed values
    Bits    Int     #Of of bits (for sign extension)
end

##Calibrate IQ at current frequency and attenuator settings
##Read IQ settings and program them into appropriate OFFSET registers:w

#Perform RX I/Q offset calibration at current frequency
##TX supplies on RF board are disabled for this setting
Message CalIQOffset 0x0012 ReplyIQCal #18  Calibrate RX IQ offset
    Update  Bool    #If true, update previous values, otherwise reset offsets before cal
    Freq    Double  #If freq is entered, it will run rxfreq then do rxiqcal, else runs at current freq
end                              #Read and average IQ ADC values at current settings (Freq and atten)

#Set TX DAC offset in FPGA
Message SetDACIQOffset   0x0013 #19
    IOffset     Int
    QOffset     Int
end 

#Set TX DAC offset in output DACS (via SPI2)
Message SetAuxDACIQ  0x0014 #20
    IValue      UInt
    QValue      UInt
end

Message SetRXThreshold 0x0015 #21
    Threshold  Float     #dB value 0 to 70
end

//Testing only
//Set the RX ADC I/Q offset values (write values to FPGA registers)
Message SetRXIQOffset 0x0016 #22
    IOffset     Int
    QOffset     Int
end

#Control RF board power supplies
Message SetRFPowerConfig 0x0017 #23
    Mode        UInt #POWERMODE_OFF=0, POWERMODE_ALL=1, POWERMODEDUPLEX=2, 
                     #POWERMODE_RX=3, POWERMODE_TX=4, POWERMODE_VSWR=4
end

#Read ADC from RF board (ReplyRFADC)
Message RFADC 0x0018 #24
    ADC         UInt 
    Channel     UInt
end

#Read RFDetector (ReplyRFDetector)
Message RFDetector 0x0019 #25 reads reg c2-det0 det1 on highlands
    Detector    UInt# 1,2,3
end

#Set RFDetector DAC
Message RFDetectorDAC 0x001A #26 Sets DAC  reg 44
    Value       UInt
end

#Program raw TX synthesizer values 
Message TXRegisters 0x001B #27
    Reg0        UInt     
    Reg1        UInt     
    Reg2        UInt     
    Reg3        UInt     
    Reg4        UInt     
    Reg5        UInt     
end

#Program raw RX synthesizer values 
Message RXRegisters 0x001C #28
    Reg0        UInt     
    Reg1        UInt     
    Reg2        UInt     
    Reg3        UInt     
    Reg4        UInt     
    Reg5        UInt     
end

#Gain value (used for TX output frequency compensation)
#Deprecated?
Message DACGainControl 0x001D #29
    Channel    UInt    #0 or 1
    Value       UInt    #Default = 0x80 (gain = 1.0)
                       # 256=Postiive unity gain, -256 negative unity gai
end

#Testing only
#New TXAttenuation command, update TXAtten (0x6) to conform
Message TXAttenuation  0x001E
   Coarse       UInt    #Enum, 0=0dB,1=20dB,2=40dB, 3=40dB
   Step         UInt    #Attenenuation (.1dB units) 0-63.5 (0-635)
   Fine         Float   #Fine Attenuation, 0 if not specified
   Index        Int    #Index (0-3) of tx attenuation register (Testserver will default to 0 if not specified)
end

Message AGCControl 0x001F  #31
   Mode         UInt    #Enum, 0=none, 1=IQ,2=Magnitude,3=IQ and magntiutde
   Samples      UInt    #0-3, no. of over limit samples to trigger
   Delay        UInt    #8 bits, delay before input is retsted, Units (12.5uS)
   Threshold    UInt    #AGC Magntiude Threshold. Only valid with modes 2-3.
end

Message GetAGCCount 0x0020 AGCCountReply #32 
end

Message CALTXIQOffset 0x0021 ReplyCALTXIQOffset #33
    Freq        Float   #Frequency to do calibration
end

Message CALTXIQGainBal 0x0022 ReplyCALTXIQGainBal #34
    Freq        Float
end

Message getCalDetTemp 0x0023 ReplyCalDetTemp #35
end

Message TXPower 0x024
    Power       Float
end
